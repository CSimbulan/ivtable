{"version":3,"sources":["ivtable_banner.png","components/Options.js","components/TableGenerator.js","components/AutoCompleteSearch.js","components/Instructions.js","components/PageFooter.js","data/pokemondata.js","data/cpmultipliers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Options","state","highlightSort","value","_this","props","options","sort","highlightLevel","highestLevel","highlightToggle","opt","_this2","this","react_default","a","createElement","className","onClick","changeSort","toggle","nundo","toggleNundo","lvl15","toggleLvl15","under90","toggleUnder90","color","toggleColor","cpfilter","toggleCPFilter","filterCP","onChange","onFilterChanged","type","changeHighestLevel","Component","TableGenerator","getRowClass","row","index","97.8","95.6","93.3","91.1","100","66.7","generateRandomKey","Math","random","getFileName","filename","selected","toLowerCase","getPkmnImagePath","shiny","dexNumber","selected_number","length","process","getTypeImagePath","getWeatherImagePath","weather","getHeaders","headers","push","shift","getName","header","slice","getImageClass","stats","map","head","key","join","column","_this3","id","selected_stats","src","alt","typing","counters","drawTable","react_csv","data","enclosingCharacter","onClickReset","AutoCompleteSearch","search","text","onTextChanged","clearSearch","PageHeader","banner","reactjs_popup_es","trigger","modal","close","version","PageFooter","pokemondata","split","cpmultipliers","getinitialState","names","getNames","cpm","suggestions","selectedStats","statsArray","resistances","filtervalue","version_number","x","namesWithNumbers","namesWithNumbersNoZero","parseInt","temp","concat","App","e","target","regex","RegExp","filter","v","test","Object","objectSpread","setState","suggestionSelected","isNaN","i","String","types","generateStatsArray","getCounters","getWeather","renderSuggestions","item","getCPM","level","cpmArray","parseFloat","calculateCP","atk","def","sta","lvl","floor","sqrt","pow","at","de","st","iv","cp15","cp20","cp25","cpHigh","hp15","hp20","hp25","hpHigh","newArray","toFixed","sortFunction","filterStats","b","cp","index2","index3","stats_raw","toConsumableArray","stats_temp","temp2","reset","removeDuplicates","inputArray","indexOf","typings","typeCounters","typeResistances","j","k","splice","boosts","weatherBoosts","Instructions","components_AutoCompleteSearch","items","components_Options","components_TableGenerator","components_PageFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fb211bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ivtable_banner.faf61ae5.png\";","import React, { Component } from \"react\";\r\n\r\nclass Options extends Component {\r\n  state = {};\r\n\r\n  highlightSort = value => {\r\n    if (this.props.options.sort === value) {\r\n      return \"buttonSort highlighted\";\r\n    } else {\r\n      return \"buttonSort notHighlighted\";\r\n    }\r\n  };\r\n\r\n  highlightLevel = value => {\r\n    if (this.props.options.highestLevel === value) {\r\n      return \"buttonSort highlighted\";\r\n    } else {\r\n      return \"buttonSort notHighlighted\";\r\n    }\r\n  };\r\n\r\n  highlightToggle = opt => {\r\n    if (opt) {\r\n      return \"buttonSort highlighted\";\r\n    } else {\r\n      return \"buttonSort notHighlighted\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Options\">\r\n        <div className=\"Box\">\r\n          <div className=\"OptionsHeader\">Sort By</div>\r\n          <button\r\n            className={this.highlightSort(\"cp\")}\r\n            onClick={() => this.props.changeSort(\"cp\")}\r\n          >\r\n            CP\r\n          </button>\r\n          <button\r\n            className={this.highlightSort(\"iv\")}\r\n            onClick={() => this.props.changeSort(\"iv\")}\r\n          >\r\n            IV\r\n          </button>\r\n          <button\r\n            className={this.highlightSort(\"atk\")}\r\n            onClick={() => this.props.changeSort(\"atk\")}\r\n          >\r\n            ATK\r\n          </button>\r\n        </div>\r\n        <div className=\"Box\">\r\n          <div className=\"OptionsHeader\">Toggle</div>\r\n          <button\r\n            className={this.highlightToggle(this.props.options.toggle.nundo)}\r\n            onClick={this.props.toggleNundo}\r\n          >\r\n            Nundo (66.7%)\r\n          </button>\r\n          <button\r\n            className={this.highlightToggle(this.props.options.toggle.lvl15)}\r\n            onClick={this.props.toggleLvl15}\r\n          >\r\n            Level 15\r\n          </button>\r\n          <button\r\n            className={this.highlightToggle(this.props.options.toggle.under90)}\r\n            onClick={this.props.toggleUnder90}\r\n          >\r\n            Under 90%\r\n          </button>\r\n          <button\r\n            className={this.highlightToggle(this.props.options.toggle.color)}\r\n            onClick={this.props.toggleColor}\r\n          >\r\n            Colored Rows\r\n          </button>\r\n        </div>\r\n        <div className=\"Box\">\r\n          <div className=\"OptionsHeader\">CP Filter</div>\r\n          <button\r\n            className={this.highlightToggle(this.props.options.cpfilter)}\r\n            onClick={this.props.toggleCPFilter}\r\n          >\r\n            Show Only CP:\r\n          </button>\r\n          <br />\r\n          <input\r\n            value={this.props.filterCP}\r\n            onChange={this.props.onFilterChanged}\r\n            type=\"number\"\r\n          />\r\n        </div>\r\n        <div className=\"Box\">\r\n          <div className=\"OptionsHeader\">Highest Level:</div>\r\n          <button\r\n            className={this.highlightLevel(40)}\r\n            onClick={() => this.props.changeHighestLevel(40)}\r\n          >\r\n            Level 40\r\n          </button>\r\n          <button\r\n            className={this.highlightLevel(35)}\r\n            onClick={() => this.props.changeHighestLevel(35)}\r\n          >\r\n            Level 35\r\n          </button>\r\n          <button\r\n            className={this.highlightLevel(30)}\r\n            onClick={() => this.props.changeHighestLevel(30)}\r\n          >\r\n            Level 30\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Options;\r\n","import React, { Component } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass TableGenerator extends Component {\r\n  getRowClass = row => {\r\n    if (!this.props.options.toggle.color) {\r\n      return null;\r\n    }\r\n\r\n    const pairs = {\r\n      97.8: \"ninetyEight\",\r\n      95.6: \"ninetySix\",\r\n      93.3: \"ninetyThree\",\r\n      91.1: \"ninetyOne\",\r\n      100.0: \"hundo\",\r\n      66.7: \"nundo\"\r\n    };\r\n    var index = 0;\r\n    if (!this.props.options.toggle.lvl15) {\r\n      index = 4;\r\n    } else {\r\n      index = 6;\r\n    }\r\n\r\n    if (row[index] === \"100.0\") {\r\n      return \"hundo\";\r\n    }\r\n    return pairs[row[index]];\r\n  };\r\n\r\n  generateRandomKey = () => {\r\n    return Math.random() * 100 + 1;\r\n  };\r\n\r\n  drawTable() {\r\n    var headers = this.getHeaders();\r\n    const stats = this.props.stats;\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {headers.map(head => (\r\n              <th key={head}>{head}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {stats.map(row => (\r\n            <tr className={this.getRowClass(row)} key={row.join()}>\r\n              {row.map(column => (\r\n                <td key={this.generateRandomKey()}>{column}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  getFileName = () => {\r\n    var filename = \"\";\r\n    filename += this.props.selected.toLowerCase();\r\n    filename += \"_sortby\" + this.props.options.sort;\r\n    filename += \".csv\";\r\n    return filename;\r\n  };\r\n\r\n  getPkmnImagePath = shiny => {\r\n    if (this.props.selected === \"\") {\r\n      return \"\";\r\n    }\r\n\r\n    let dexNumber = this.props.selected_number;\r\n    if (dexNumber.length === 3) {\r\n      dexNumber += \"_00\";\r\n    }\r\n    if (shiny) {\r\n      dexNumber += \"_shiny\";\r\n    }\r\n    return (\r\n      process.env.PUBLIC_URL +\r\n      \"/pokemon_icons/pokemon_icon_\" +\r\n      dexNumber +\r\n      \".png\"\r\n    );\r\n  };\r\n\r\n  getTypeImagePath = type => {\r\n    if (this.props.selected === \"\") {\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      process.env.PUBLIC_URL + \"/type_icons/Badge_Type_\" + type + \"_01.png\"\r\n    );\r\n  };\r\n\r\n  getWeatherImagePath = weather => {\r\n    if (this.props.selected === \"\") {\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      process.env.PUBLIC_URL +\r\n      \"/weather_icons/weatherIcon_small_\" +\r\n      weather +\r\n      \".png\"\r\n    );\r\n  };\r\n\r\n  getHeaders = () => {\r\n    var headers = [\r\n      \"CP@15\",\r\n      \"HP@15\",\r\n      \"CP@20\",\r\n      \"HP@20\",\r\n      \"CP@25\",\r\n      \"HP@25\",\r\n      \"IV%\",\r\n      \"ATK\",\r\n      \"DEF\",\r\n      \"STA\"\r\n    ];\r\n\r\n    headers.push(\"CP@\" + this.props.options.highestLevel);\r\n    headers.push(\"HP@\" + this.props.options.highestLevel);\r\n\r\n    if (!this.props.options.toggle.lvl15) {\r\n      headers.shift();\r\n      headers.shift();\r\n    }\r\n\r\n    return headers;\r\n  };\r\n\r\n  getName = () => {\r\n    let header = \"\";\r\n    if (this.props.selected) {\r\n      header += \"#\";\r\n    }\r\n\r\n    return (\r\n      header +\r\n      this.props.selected_number.slice(0, 3) +\r\n      \" \" +\r\n      this.props.selected\r\n    );\r\n  };\r\n\r\n  getImageClass = () => {\r\n    if (this.props.selected) {\r\n      return \"tableImage\";\r\n    } else {\r\n      return \"tableImageHide\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <hr />\r\n        <h1>{this.getName()}</h1>\r\n        <div className={this.getImageClass()}>\r\n          <div className=\"Block\" id=\"BlockLeft\">\r\n            <span className=\"BlockLeftHeader\">Base Stats</span>\r\n            <hr />\r\n            Attack: {this.props.selected_stats[0]}\r\n            <br />\r\n            Defense: {this.props.selected_stats[1]}\r\n            <br />\r\n            Stamina: {this.props.selected_stats[2]}\r\n          </div>\r\n          <div className=\"Block\">\r\n            <img src={this.getPkmnImagePath(false)} alt=\"\" />\r\n          </div>\r\n          <div className=\"Block\">\r\n            <img src={this.getPkmnImagePath(true)} alt=\"\" />\r\n          </div>\r\n          <div className=\"Block\" id=\"BlockRight\">\r\n            <strong>\r\n              <i>\r\n                <u>Typing:</u>\r\n              </i>\r\n            </strong>\r\n            <br />\r\n            {this.props.typing.map(type => (\r\n              <img\r\n                className=\"TypeIcon\"\r\n                src={this.getTypeImagePath(type)}\r\n                alt={type}\r\n                key={type}\r\n              />\r\n            ))}\r\n            <br />\r\n            <strong>\r\n              <i>\r\n                <u>Counters:</u>\r\n              </i>\r\n            </strong>\r\n            <br />\r\n            {this.props.counters.map(type => (\r\n              <img\r\n                className=\"TypeIcon\"\r\n                src={this.getTypeImagePath(type)}\r\n                alt={type}\r\n                key={type}\r\n              />\r\n            ))}\r\n            <br />\r\n\r\n            <strong>\r\n              <i>\r\n                <u>Weather Boosts:</u>\r\n              </i>\r\n            </strong>\r\n            <br />\r\n            {this.props.weather.map(weather => (\r\n              <img\r\n                className=\"TypeIcon\"\r\n                src={this.getWeatherImagePath(weather)}\r\n                alt={weather}\r\n                key={weather}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"Table\">{this.drawTable()}</div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <CSVLink\r\n          data={this.props.stats}\r\n          filename={this.getFileName()}\r\n          enclosingCharacter={`;`}\r\n          headers={this.getHeaders()}\r\n        >\r\n          <button className=\"buttonExport\">Export As CSV File</button>\r\n        </CSVLink>\r\n        <br />\r\n        <br />\r\n        <button className=\"buttonReset\" onClick={this.props.onClickReset}>\r\n          Reset\r\n        </button>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableGenerator;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AutoCompleteSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          value={this.props.search.text}\r\n          onChange={this.props.onTextChanged}\r\n          type=\"text\"\r\n        />\r\n        <span className=\"ClearSearch\" onClick={this.props.clearSearch}>\r\n          &times;\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoCompleteSearch;\r\n","import React, { Component } from \"react\";\r\nimport banner from \"../ivtable_banner.png\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nclass PageHeader extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src={banner} alt=\"Pokémon IV Table Generator\" />\r\n        <div className=\"Header\">\r\n          <div className=\"Instructions\">\r\n            <p>\r\n              <strong>How it works:</strong> Start typing a Pokémon (species\r\n              name or number) in the text box below. Select the Pokémon you want\r\n              to generate a table for from the drop down box. Use the sorting\r\n              and toggle buttons to customize the table. These tables are used\r\n              as reference sheets for quickly checking a Pokémon's IVs based on\r\n              their CP value from a normal raid (Level 20), weather boosted raid\r\n              (Level 25), and research task (Level 15).\r\n            </p>\r\n            Click on this button for a more detailed user manual:{\"     \"}\r\n            <Popup\r\n              trigger={<button className=\"buttonManual\">User Manual</button>}\r\n              modal\r\n            >\r\n              {close => (\r\n                <div className=\"modal\">\r\n                  <span className=\"close\" onClick={close}>\r\n                    &times;\r\n                  </span>\r\n                  <div className=\"header\">\r\n                    <h1>\r\n                      Pokémon GO IV Table Generator Ver {this.props.version}\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"content\">\r\n                    <br />\r\n                    This app lets you create an IV table for any Pokémon.\r\n                    <br />\r\n                    To use it, start typing a Pokémon species or number in the\r\n                    text bar. A dropdown menu will appear allowing you to select\r\n                    a species.\r\n                    <br />A table will automatically be generated. You can\r\n                    choose the following settings:\r\n                    <br />\r\n                    <h2>Sort Settings</h2>\r\n                    <ul>\r\n                      <li>\r\n                        Sort by CP at level 20. in descending order. If two CPs\r\n                        are equal then it will next sort by CP at the highest\r\n                        level shown, followed by IV percentage.\r\n                      </li>\r\n                      <li>\r\n                        Sort by IV percentage in descending order. If two IVs\r\n                        are equal then it will next sort by CP at level 20,\r\n                        follow by CP at the highest level shown.\r\n                      </li>\r\n                      <li>\r\n                        Sort by ATK IV in descending order. If two ATK IVs are\r\n                        equal then it will next sort by IV percentage, followed\r\n                        by CP at the highest level shown.\r\n                      </li>\r\n                    </ul>\r\n                    <h2>Toggle Settings</h2>\r\n                    <ul>\r\n                      <li>\r\n                        Nundo: this will show the stats for an IV percentage of\r\n                        66.7% (10/10/10), which the lowest you can get from a\r\n                        raid / egg hatch. If this setting is toggled ON then it\r\n                        will show even if the Under 90 setting is OFF.\r\n                      </li>\r\n                      <li>\r\n                        Level 15: this will show CP and HP for level 15. This is\r\n                        useful for research task Pokémon which are caught at\r\n                        level 15.\r\n                      </li>\r\n                      <li>\r\n                        Under 90%: this will show all combinations of thats from\r\n                        66.7% (10/10/10) to 100% (15/15/15). The nundo stats\r\n                        will show even if this setting is OFF.\r\n                      </li>\r\n                      <li>\r\n                        Colored rows: this will toggle ON/OFF the coloring of\r\n                        table rows.\r\n                      </li>\r\n                    </ul>\r\n                    <h2>CP Filter</h2>\r\n                    <ul>\r\n                      <li>\r\n                        Show Only CP: the table will only show IV combinations\r\n                        that produce a CP matched with the value entered here.\r\n                      </li>\r\n                    </ul>\r\n                    <h2>Highest Level</h2>\r\n                    <ul>\r\n                      <li>\r\n                        Select which level the last two columns will show CP and\r\n                        HP for.\r\n                      </li>\r\n                    </ul>\r\n                    <h2>Export As CSV File</h2>\r\n                    This button will export the table data to a csv file. Note\r\n                    that all the values will be wrapped in double quotation\r\n                    marks. This is how the library used to export does it. There\r\n                    is supposed to be a way to remove the quotes but it does not\r\n                    seem to be working.\r\n                    <h2>Reset</h2>\r\n                    Clears the table and resets all settings to default.\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <button\r\n                      className=\"buttonManual\"\r\n                      onClick={() => {\r\n                        close();\r\n                      }}\r\n                    >\r\n                      Got It!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Popup>\r\n          </div>\r\n          <h1>Select a Pokémon:</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageFooter extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <hr />\r\n        Version {this.props.version}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFooter;\r\n","export default `Bulbasaur,118,111,128,001,Grass,Poison\r\nIvysaur,151,143,155,002,Grass,Poison\r\nVenusaur,198,189,190,003,Grass,Poison\r\nCharmander,116,93,118,004,Fire,None\r\nCharmeleon,158,126,151,005,Fire,None\r\nCharizard,223,173,186,006,Fire,Flying\r\nSquirtle,94,121,127,007,Water,None\r\nWartortle,126,155,153,008,Water,None\r\nBlastoise,171,207,188,009,Water,None\r\nCaterpie,55,55,128,010,Bug,None\r\nMetapod,45,80,137,011,Bug,None\r\nButterfree,167,137,155,012,Bug,Flying\r\nWeedle,63,50,120,013,Bug,Poison\r\nKakuna,46,75,128,014,Bug,Poison\r\nBeedrill,169,130,163,015,Bug,Poison\r\nPidgey,85,73,120,016,Normal,Flying\r\nPidgeotto,117,105,160,017,Normal,Flying\r\nPidgeot,166,154,195,018,Normal,Flying\r\nRattata,103,70,102,019,Normal,None\r\nRattata-Alolan,103,70,102,019_61,Dark,Normal\r\nRaticate,161,139,146,020,Normal,None\r\nRaticate-Alolan,135,154,181,020_61,Dark,Normal\r\nSpearow,112,60,120,021,Normal,Flying\r\nFearow,182,133,163,022,Normal,Flying\r\nEkans,110,97,111,023,Poison,None\r\nArbok,167,153,155,024,Poison,None\r\nPikachu,112,96,111,025,Electric,None\r\nRaichu,193,151,155,026,Electric,None\r\nRaichu-Alolan,201,154,155,026_61,Electric,Psychic\r\nSandshrew,126,120,137,027,Ground,None\r\nSandshrew-Alolan,125,129,137,027_61,Ice,Steel\r\nSandslash,182,175,181,028,Ground,None\r\nSandslash-Alolan,177,195,181,028_61,Ice,Steel\r\nNidoran,86,89,146,029,Poison,None\r\nNidorina,117,120,172,030,Poison,None\r\nNidoqueen,180,173,207,031,Poison,Ground\r\nNidoran,105,76,130,032,Poison,None\r\nNidorino,137,111,156,033,Poison,None\r\nNidoking,204,156,191,034,Poison,Ground\r\nClefairy,107,108,172,035,Fairy,None\r\nClefable,178,162,216,036,Fairy,None\r\nVulpix,96,109,116,037,Fire,None\r\nVulpix-Alolan,96,109,116,037_61,Ice,None\r\nNinetales,169,190,177,038,Fire,None\r\nNinetales-Alolan,170,193,177,038_61,Ice,Fairy\r\nJigglypuff,80,41,251,039,Normal,Fairy\r\nWigglytuff,156,90,295,040,Normal,Fairy\r\nZubat,83,73,120,041,Poison,Flying\r\nGolbat,161,150,181,042,Poison,Flying\r\nOddish,131,112,128,043,Grass,Poison\r\nGloom,153,136,155,044,Grass,Poison\r\nVileplume,202,167,181,045,Grass,Poison\r\nParas,121,99,111,046,Bug,Grass\r\nParasect,165,146,155,047,Bug,Grass\r\nVenonat,100,100,155,048,Bug,Poison\r\nVenomoth,179,143,172,049,Bug,Poison\r\nDiglett,109,78,67,050,Ground,None\r\nDiglett-Alolan,108,81,67,050_61,Ground,Steel\r\nDugtrio,167,134,111,051,Ground,None\r\nDugtrio-Alolan,201,142,111,051_61,Ground,Steel\r\nMeowth,92,78,120,052,Normal,None\r\nMeowth-Alolan,99,78,120,052_61,Dark,None\r\nPersian,150,136,163,053,Normal,None\r\nPersian-Alolan,158,136,163,053_61,Dark,None\r\nPsyduck,122,95,137,054,Water,None\r\nGolduck,191,162,190,055,Water,None\r\nMankey,148,82,120,056,Fighting,None\r\nPrimeape,207,138,163,057,Fighting,None\r\nGrowlithe,136,93,146,058,Fire,None\r\nArcanine,227,166,207,059,Fire,None\r\nPoliwag,101,82,120,060,Water,None\r\nPoliwhirl,130,123,163,061,Water,None\r\nPoliwrath,182,184,207,062,Water,Fighting\r\nAbra,195,82,93,063,Psychic,None\r\nKadabra,232,117,120,064,Psychic,None\r\nAlakazam,271,167,146,065,Psychic,None\r\nMachop,137,82,172,066,Fighting,None\r\nMachoke,177,125,190,067,Fighting,None\r\nMachamp,234,159,207,068,Fighting,None\r\nBellsprout,139,61,137,069,Grass,Poison\r\nWeepinbell,172,92,163,070,Grass,Poison\r\nVictreebel,207,135,190,071,Grass,Poison\r\nTentacool,97,149,120,072,Water,Poison\r\nTentacruel,166,209,190,073,Water,Poison\r\nGeodude,132,132,120,074,Rock,Ground\r\nGeodude-Alolan,132,132,120,074_61,Rock,Electric\r\nGraveler,164,164,146,075,Rock,Ground\r\nGraveler-Alolan,164,164,146,075_61,Rock,Electric\r\nGolem,211,198,190,076,Rock,Ground\r\nGolem-Alolan,211,198,190,076_61,Rock,Electric\r\nPonyta,170,127,137,077,Fire,None\r\nRapidash,207,162,163,078,Fire,None\r\nSlowpoke,109,98,207,079,Water,Psychic\r\nSlowbro,177,180,216,080,Water,Psychic\r\nMagnemite,165,121,93,081,Electric,Steel\r\nMagneton,223,169,137,082,Electric,Steel\r\nFarfetchd,124,115,141,083,Normal,Flying\r\nDoduo,158,83,111,084,Normal,Flying\r\nDodrio,218,140,155,085,Normal,Flying\r\nSeel,85,121,163,086,Water,None\r\nDewgong,139,177,207,087,Water,Ice\r\nGrimer,135,90,190,088,Poison,None\r\nGrimer-Alolan,135,90,190,088_61,Poison,Dark\r\nMuk,190,172,233,089,Poison,None\r\nMuk-Alolan,190,172,233,089_61,Poison,Dark\r\nShellder,116,134,102,090,Water,None\r\nCloyster,186,256,137,091,Water,Ice\r\nGastly,186,67,102,092,Ghost,Poison\r\nHaunter,223,107,128,093,Ghost,Poison\r\nGengar,261,149,155,094,Ghost,Poison\r\nOnix,85,232,111,095,Rock,Ground\r\nDrowzee,89,136,155,096,Psychic,None\r\nHypno,144,193,198,097,Psychic,None\r\nKrabby,181,124,102,098,Water,None\r\nKingler,240,181,146,099,Water,None\r\nVoltorb,109,111,120,100,Electric,None\r\nElectrode,173,173,155,101,Electric,None\r\nExeggcute,107,125,155,102,Grass,Psychic\r\nExeggutor,233,149,216,103,Grass,Psychic\r\nExeggutor-Alolan,230,153,216,103_61,Grass,Dragon\r\nCubone,90,144,137,104,Ground,None\r\nMarowak,144,186,155,105,Ground,None\r\nMarowak-Alolan,144,186,155,105_61,Fire,Ghost\r\nHitmonlee,224,181,137,106,Fighting,None\r\nHitmonchan,193,197,137,107,Fighting,None\r\nLickitung,108,137,207,108,Normal,None\r\nKoffing,119,141,120,109,Poison,None\r\nWeezing,174,197,163,110,Poison,None\r\nRhyhorn,140,127,190,111,Ground,Rock\r\nRhydon,222,171,233,112,Ground,Rock\r\nChansey,60,128,487,113,Normal,None\r\nTangela,183,169,163,114,Grass,None\r\nKangaskhan,181,165,233,115,Normal,None\r\nHorsea,129,103,102,116,Water,None\r\nSeadra,187,156,146,117,Water,None\r\nGoldeen,123,110,128,118,Water,None\r\nSeaking,175,147,190,119,Water,None\r\nStaryu,137,112,102,120,Water,None\r\nStarmie,210,184,155,121,Water,Psychic\r\nMr. Mime,192,205,120,122,Psychic,Fairy\r\nScyther,218,170,172,123,Bug,Flying\r\nJynx,223,151,163,124,Ice,Psychic\r\nElectabuzz,198,158,163,125,Electric,None\r\nMagmar,206,154,163,126,Fire,None\r\nPinsir,238,182,163,127,Bug,None\r\nTauros,198,183,181,128,Normal,None\r\nMagikarp,29,85,85,129,Water,None\r\nGyarados,237,186,216,130,Water,Flying\r\nLapras,165,174,277,131,Water,Ice\r\nDitto,91,91,134,132,Normal,None\r\nEevee,104,114,146,133,Normal,None\r\nVaporeon,205,161,277,134,Water,None\r\nJolteon,232,182,163,135,Electric,None\r\nFlareon,246,179,163,136,Fire,None\r\nPorygon,153,136,163,137,Normal,None\r\nOmanyte,155,153,111,138,Rock,Water\r\nOmastar,207,201,172,139,Rock,Water\r\nKabuto,148,140,102,140,Rock,Water\r\nKabutops,220,186,155,141,Rock,Water\r\nAerodactyl,221,159,190,142,Rock,Flying\r\nSnorlax,190,169,330,143,Normal,None\r\nArticuno,192,236,207,144,Ice,Flying\r\nZapdos,253,185,207,145,Electric,Flying\r\nMoltres,251,181,207,146,Fire,Flying\r\nDratini,119,91,121,147,Dragon,None\r\nDragonair,163,135,156,148,Dragon,None\r\nDragonite,263,198,209,149,Dragon,Flying\r\nMewtwo,300,182,214,150,Psychic,None\r\nMew,210,210,225,151,Psychic,None\r\nChikorita,92,122,128,152,Grass,None\r\nBayleef,122,155,155,153,Grass,None\r\nMeganium,168,202,190,154,Grass,None\r\nCyndaquil,116,93,118,155,Fire,None\r\nQuilava,158,126,151,156,Fire,None\r\nTyphlosion,223,173,186,157,Fire,None\r\nTotodile,117,109,137,158,Water,None\r\nCroconaw,150,142,163,159,Water,None\r\nFeraligatr,205,188,198,160,Water,None\r\nSentret,79,73,111,161,Normal,None\r\nFurret,148,125,198,162,Normal,None\r\nHoothoot,67,88,155,163,Normal,Flying\r\nNoctowl,145,156,225,164,Normal,Flying\r\nLedyba,72,118,120,165,Bug,Flying\r\nLedian,107,179,146,166,Bug,Flying\r\nSpinarak,105,73,120,167,Bug,Poison\r\nAriados,161,124,172,168,Bug,Poison\r\nCrobat,194,178,198,169,Poison,Flying\r\nChinchou,106,97,181,170,Water,Electric\r\nLanturn,146,137,268,171,Water,Electric\r\nPichu,77,53,85,172,Electric,None\r\nCleffa,75,79,137,173,Fairy,None\r\nIgglybuff,69,32,207,174,Normal,Fairy\r\nTogepi,67,116,111,175,Fairy,None\r\nTogetic,139,181,146,176,Fairy,Flying\r\nNatu,134,89,120,177,Psychic,Flying\r\nXatu,192,146,163,178,Psychic,Flying\r\nMareep,114,79,146,179,Electric,None\r\nFlaaffy,145,109,172,180,Electric,None\r\nAmpharos,211,169,207,181,Electric,None\r\nBellossom,169,186,181,182,Grass,None\r\nMarill,37,93,172,183,Water,Fairy\r\nAzumarill,112,152,225,184,Water,Fairy\r\nSudowoodo,167,176,172,185,Rock,None\r\nPolitoed,174,179,207,186,Water,None\r\nHoppip,67,94,111,187,Grass,Flying\r\nSkiploom,91,120,146,188,Grass,Flying\r\nJumpluff,118,183,181,189,Grass,Flying\r\nAipom,136,112,146,190,Normal,None\r\nSunkern,55,55,102,191,Grass,None\r\nSunflora,185,135,181,192,Grass,None\r\nYanma,154,94,163,193,Bug,Flying\r\nWooper,75,66,146,194,Water,Ground\r\nQuagsire,152,143,216,195,Water,Ground\r\nEspeon,261,175,163,196,Psychic,None\r\nUmbreon,126,240,216,197,Dark,None\r\nMurkrow,175,87,155,198,Dark,Flying\r\nSlowking,177,180,216,199,Water,Psychic\r\nMisdreavus,167,154,155,200,Ghost,None\r\nUnown,136,91,134,201,Psychic,None\r\nWobbuffet,60,106,382,202,Psychic,None\r\nGirafarig,182,133,172,203,Normal,Psychic\r\nPineco,108,122,137,204,Bug,None\r\nForretress,161,205,181,205,Bug,Steel\r\nDunsparce,131,128,225,206,Normal,None\r\nGligar,143,184,163,207,Ground,Flying\r\nSteelix,148,272,181,208,Steel,Ground\r\nSnubbull,137,85,155,209,Fairy,None\r\nGranbull,212,131,207,210,Fairy,None\r\nQwilfish,184,138,163,211,Water,Poison\r\nScizor,236,181,172,212,Bug,Steel\r\nShuckle,17,396,85,213,Bug,Rock\r\nHeracross,234,179,190,214,Bug,Fighting\r\nSneasel,189,146,146,215,Dark,Ice\r\nTeddiursa,142,93,155,216,Normal,None\r\nUrsaring,236,144,207,217,Normal,None\r\nSlugma,118,71,120,218,Fire,None\r\nMagcargo,139,191,137,219,Fire,Rock\r\nSwinub,90,69,137,220,Ice,Ground\r\nPiloswine,181,138,225,221,Ice,Ground\r\nCorsola,118,156,146,222,Water,Rock\r\nRemoraid,127,69,111,223,Water,None\r\nOctillery,197,141,181,224,Water,None\r\nDelibird,128,90,128,225,Ice,Flying\r\nMantine,148,226,163,226,Water,Flying\r\nSkarmory,148,226,163,227,Steel,Flying\r\nHoundour,152,83,128,228,Dark,Fire\r\nHoundoom,224,144,181,229,Dark,Fire\r\nKingdra,194,194,181,230,Water,Dragon\r\nPhanpy,107,98,207,231,Ground,None\r\nDonphan,214,185,207,232,Ground,None\r\nPorygon2,198,180,198,233,Normal,None\r\nStantler,192,131,177,234,Normal,None\r\nSmeargle,40,83,146,235,Normal,None\r\nTyrogue,64,64,111,236,Fighting,None\r\nHitmontop,173,207,137,237,Fighting,None\r\nSmoochum,153,91,128,238,Ice,Psychic\r\nElekid,135,101,128,239,Electric,None\r\nMagby,151,99,128,240,Fire,None\r\nMiltank,157,193,216,241,Normal,None\r\nBlissey,129,169,496,242,Normal,None\r\nRaikou,241,195,207,243,Electric,None\r\nEntei,235,171,251,244,Fire,None\r\nSuicune,180,235,225,245,Water,None\r\nLarvitar,115,93,137,246,Rock,Ground\r\nPupitar,155,133,172,247,Rock,Ground\r\nTyranitar,251,207,225,248,Rock,Dark\r\nLugia,193,310,235,249,Psychic,Flying\r\nHo-Oh,239,244,214,250,Fire,Flying\r\nCelebi,210,210,225,251,Psychic,Grass\r\nTreecko,124,94,120,252,Grass,None\r\nGrovyle,172,120,137,253,Grass,None\r\nSceptile,223,169,172,254,Grass,None\r\nTorchic,130,87,128,255,Fire,None\r\nCombusken,163,115,155,256,Fire,Fighting\r\nBlaziken,240,141,190,257,Fire,Fighting\r\nMudkip,126,93,137,258,Water,None\r\nMarshtomp,156,133,172,259,Water,Ground\r\nSwampert,208,175,225,260,Water,Ground\r\nPoochyena,96,61,111,261,Dark,None\r\nMightyena,171,132,172,262,Dark,None\r\nZigzagoon,58,80,116,263,Normal,None\r\nLinoone,142,128,186,264,Normal,None\r\nWurmple,75,59,128,265,Bug,None\r\nSilcoon,60,77,137,266,Bug,None\r\nBeautifly,189,98,155,267,Bug,Flying\r\nCascoon,60,77,137,268,Bug,None\r\nDustox,98,162,155,269,Bug,Poison\r\nLotad,71,77,120,270,Water,Grass\r\nLombre,112,119,155,271,Water,Grass\r\nLudicolo,173,176,190,272,Water,Grass\r\nSeedot,71,77,120,273,Grass,None\r\nNuzleaf,134,78,172,274,Grass,Dark\r\nShiftry,200,121,207,275,Grass,Dark\r\nTaillow,106,61,120,276,Normal,Flying\r\nSwellow,185,124,155,277,Normal,Flying\r\nWingull,106,61,120,278,Water,Flying\r\nPelipper,175,174,155,279,Water,Flying\r\nRalts,79,59,99,280,Psychic,Fairy\r\nKirlia,117,90,116,281,Psychic,Fairy\r\nGardevoir,237,195,169,282,Psychic,Fairy\r\nSurskit,93,87,120,283,Bug,Water\r\nMasquerain,192,150,172,284,Bug,Flying\r\nShroomish,74,110,155,285,Grass,None\r\nBreloom,241,144,155,286,Grass,Fighting\r\nSlakoth,104,92,155,287,Normal,None\r\nVigoroth,159,145,190,288,Normal,None\r\nSlaking,290,166,284,289,Normal,None\r\nNincada,80,126,104,290,Bug,Ground\r\nNinjask,199,112,156,291,Bug,Flying\r\nShedinja,153,73,1,292,Bug,Ghost\r\nWhismur,92,42,162,293,Normal,None\r\nLoudred,134,81,197,294,Normal,None\r\nExploud,179,137,232,295,Normal,None\r\nMakuhita,99,54,176,296,Fighting,None\r\nHariyama,209,114,302,297,Fighting,None\r\nAzurill,36,71,137,298,Normal,Fairy\r\nNosepass,82,215,102,299,Rock,None\r\nSkitty,84,79,137,300,Normal,None\r\nDelcatty,132,127,172,301,Normal,None\r\nSableye,141,136,137,302,Dark,Ghost\r\nMawile,155,141,137,303,Steel,Fairy\r\nAron,121,141,137,304,Steel,Rock\r\nLairon,158,198,155,305,Steel,Rock\r\nAggron,198,257,172,306,Steel,Rock\r\nMeditite,78,107,102,307,Fighting,Psychic\r\nMedicham,121,152,155,308,Fighting,Psychic\r\nElectrike,123,78,120,309,Electric,None\r\nManectric,215,127,172,310,Electric,None\r\nPlusle,167,129,155,311,Electric,None\r\nMinun,147,150,155,312,Electric,None\r\nVolbeat,143,166,163,313,Bug,None\r\nIllumise,143,166,163,314,Bug,None\r\nRoselia,186,131,137,315,Grass,Poison\r\nGulpin,80,99,172,316,Poison,None\r\nSwalot,140,159,225,317,Poison,None\r\nCarvanha,171,39,128,318,Water,Dark\r\nSharpedo,243,83,172,319,Water,Dark\r\nWailmer,136,68,277,320,Water,None\r\nWailord,175,87,347,321,Water,None\r\nNumel,119,79,155,322,Fire,Ground\r\nCamerupt,194,136,172,323,Fire,Ground\r\nTorkoal,151,203,172,324,Fire,None\r\nSpoink,125,122,155,325,Psychic,None\r\nGrumpig,171,188,190,326,Psychic,None\r\nSpinda,116,116,155,327,Normal,None\r\nTrapinch,162,78,128,328,Ground,None\r\nVibrava,134,99,137,329,Ground,Dragon\r\nFlygon,205,168,190,330,Ground,Dragon\r\nCacnea,156,74,137,331,Grass,None\r\nCacturne,221,115,172,332,Grass,Dark\r\nSwablu,76,132,128,333,Normal,Flying\r\nAltaria,141,201,181,334,Dragon,Flying\r\nZangoose,222,124,177,335,Normal,None\r\nSeviper,196,118,177,336,Poison,None\r\nLunatone,178,153,207,337,Rock,Psychic\r\nSolrock,178,153,207,338,Rock,Psychic\r\nBarboach,93,82,137,339,Water,Ground\r\nWhiscash,151,141,242,340,Water,Ground\r\nCorphish,141,99,125,341,Water,None\r\nCrawdaunt,224,142,160,342,Water,Dark\r\nBaltoy,77,124,120,343,Ground,Psychic\r\nClaydol,140,229,155,344,Ground,Psychic\r\nLileep,105,150,165,345,Rock,Grass\r\nCradily,152,194,200,346,Rock,Grass\r\nAnorith,176,100,128,347,Rock,Bug\r\nArmaldo,222,174,181,348,Rock,Bug\r\nFeebas,29,85,85,349,Water,None\r\nMilotic,192,219,216,350,Water,None\r\nCastform,139,139,172,351,Normal,None\r\nCastform-Rainy,139,139,172,351_13,Fire,None\r\nCastform-Sunny,139,139,172,351_12,Water,None\r\nCastform-Snowy,139,139,172,351_14,Ice,None\r\nKecleon,161,189,155,352,Normal,None\r\nShuppet,138,65,127,353,Ghost,None\r\nBanette,218,126,162,354,Ghost,None\r\nDuskull,70,162,85,355,Ghost,None\r\nDusclops,124,234,120,356,Ghost,None\r\nTropius,136,163,223,357,Grass,Flying\r\nChimecho,175,170,181,358,Psychic,None\r\nAbsol,246,120,163,359,Dark,None\r\nWynaut,41,86,216,360,Psychic,None\r\nSnorunt,95,95,137,361,Ice,None\r\nGlalie,162,162,190,362,Ice,None\r\nSpheal,95,90,172,363,Ice,Water\r\nSealeo,137,132,207,364,Ice,Water\r\nWalrein,182,176,242,365,Ice,Water\r\nClamperl,133,135,111,366,Water,None\r\nHuntail,197,179,146,367,Water,None\r\nGorebyss,211,179,146,368,Water,None\r\nRelicanth,162,203,225,369,Water,Rock\r\nLuvdisc,81,128,125,370,Water,None\r\nBagon,134,93,128,371,Dragon,None\r\nShelgon,172,155,163,372,Dragon,None\r\nSalamence,277,168,216,373,Dragon,Flying\r\nBeldum,96,132,120,374,Steel,Psychic\r\nMetang,138,176,155,375,Steel,Psychic\r\nMetagross,257,228,190,376,Steel,Psychic\r\nRegirock,179,309,190,377,Rock,None\r\nRegice,179,309,190,378,Ice,None\r\nRegisteel,143,285,190,379,Steel,None\r\nLatias,228,246,190,380,Dragon,Psychic\r\nLatios,268,212,190,381,Dragon,Psychic\r\nKyogre,270,228,205,382,Water,None\r\nGroudon,270,228,205,383,Ground,None\r\nRayquaza,284,170,213,384,Dragon,Flying\r\nJirachi,210,210,225,385,Steel,Psychic\r\nDeoxys,345,115,137,386,Psychic,None\r\nDeoxys-Attack,414,46,137,386_12,Psychic,None\r\nDeoxys-Defense,144,330,137,386_13,Psychic,None\r\nDeoxys-Speed,230,218,137,386_14,Psychic,None\r\nTurtwig,119,110,146,387,Grass,None\r\nGrotle,157,143,181,388,Grass,None\r\nTorterra,202,188,216,389,Grass,Ground\r\nChimchar,113,86,127,390,Fire,None\r\nMonferno,158,105,162,391,Fire,Fighting\r\nInfernape,222,151,183,392,Fire,Fighting\r\nPiplup,112,102,142,393,Water,None\r\nPrinplup,150,139,162,394,Water,None\r\nEmpoleon,210,186,197,395,Water,Steel\r\nStarly,101,58,120,396,Normal,Flying\r\nStaravia,142,94,146,397,Normal,Flying\r\nStaraptor,234,140,198,398,Normal,Flying\r\nBidoof,80,73,153,399,Normal,None\r\nBibarel,162,119,188,400,Normal,Water\r\nKricketot,45,74,114,401,Bug,None\r\nKricketune,160,100,184,402,Bug,None\r\nShinx,117,64,128,403,Electric,None\r\nLuxio,159,95,155,404,Electric,None\r\nLuxray,232,156,190,405,Electric,None\r\nBudew,91,109,120,406,Grass,Poison\r\nRoserade,243,185,155,407,Grass,Poison\r\nCranidos,218,71,167,408,Rock,None\r\nRampardos,295,109,219,409,Rock,None\r\nShieldon,76,195,102,410,Rock,Steel\r\nBastiodon,94,286,155,411,Rock,Steel\r\nBurmy,53,83,120,412_11,Bug,None\r\nBurmy-Sandy Cloak,53,83,120,412_12,Bug,None\r\nBurmy-Trash Cloak,53,83,120,412_13,Bug,None\r\nWormadam,141,180,155,413_11,Bug,Grass\r\nWormadam-Sandy Cloak,141,180,155,413_12,Bug,Ground\r\nWormadam-Trash Cloak,127,175,155,413_13,Bug,Steel\r\nMothim,185,98,172,414,Bug,Flying\r\nCombee,59,83,102,415,Bug,Flying\r\nVespiquen,149,190,172,416,Bug,Flying\r\nPachirisu,94,172,155,417,Electric,None\r\nBuizel,132,67,146,418,Water,None\r\nFloatzel,221,114,198,419,Water,None\r\nCherubi,108,92,128,420,Grass,None\r\nCherrim-Overcast,170,153,172,421_11,Grass,None\r\nCherrim-Sunshine,170,153,172,421_12,Grass,None\r\nShellos-West,103,105,183,422_11,Water,None\r\nShellos-East,103,105,183,422_12,Water,None\r\nGastrodon-West,169,143,244,423_11,Water,Ground\r\nGastrodon-East,169,143,244,423_12,Water,Ground\r\nAmbipom,205,143,181,424,Normal,None\r\nDrifloon,117,80,207,425,Ghost,Flying\r\nDrifblim,180,102,312,426,Ghost,Flying\r\nBuneary,130,105,146,427,Normal,None\r\nLopunny,156,194,163,428,Normal,None\r\nMismagius,211,187,155,429,Ghost,None\r\nHonchkrow,243,103,225,430,Dark,Flying\r\nGlameow,109,82,135,431,Normal,None\r\nPurugly,172,133,174,432,Normal,None\r\nChingling,114,94,128,433,Psychic,None\r\nStunky,121,90,160,434,Poison,Dark\r\nSkuntank,184,132,230,435,Poison,Dark\r\nBronzor,43,154,149,436,Steel,Psychic\r\nBronzong,161,213,167,437,Steel,Psychic\r\nBonsly,124,133,137,438,Rock,None\r\nMime Jr.,125,142,85,439,Psychic,Fairy\r\nHappiny,25,77,225,440,Normal,None\r\nChatot,183,91,183,441,Normal,Flying\r\nSpiritomb,169,199,137,442,Ghost,Dark\r\nGible,124,84,151,443,Dragon,Ground\r\nGabite,172,125,169,444,Dragon,Ground\r\nGarchomp,261,193,239,445,Dragon,Ground\r\nMunchlax,137,117,286,446,Normal,None\r\nRiolu,127,78,120,447,Fighting,None\r\nLucario,236,144,172,448,Fighting,Steel\r\nHippopotas,124,118,169,449,Ground,None\r\nHippowdon,201,191,239,450,Ground,None\r\nSkorupi,93,151,120,451,Poison,Bug\r\nDrapion,180,202,172,452,Poison,Dark\r\nCroagunk,116,76,134,453,Poison,Fighting\r\nToxicroak,211,133,195,454,Poison,Fighting\r\nCarnivine,187,136,179,455,Grass,None\r\nFinneon,96,116,135,456,Water,None\r\nLumineon,142,170,170,457,Water,None\r\nMantyke,105,179,128,458,Water,Flying\r\nSnover,115,105,155,459,Grass,Ice\r\nAbomasnow,178,158,207,460,Grass,Ice\r\nWeavile,243,171,172,461,Dark,Ice\r\nMagnezone,238,205,172,462,Electric,Steel\r\nLickilicky,161,181,242,463,Normal,None\r\nRhyperior,241,190,251,464,Ground,Rock\r\nTangrowth,207,184,225,465,Grass,None\r\nElectivire,249,163,181,466,Electric,None\r\nMagmortar,247,172,181,467,Fire,None\r\nTogekiss,225,217,198,468,Fairy,Flying\r\nYanmega,231,156,200,469,Bug,Flying\r\nLeafeon,216,219,163,470,Grass,None\r\nGlaceon,238,205,163,471,Ice,None\r\nGliscor,185,222,181,472,Ground,Flying\r\nMamoswine,247,146,242,473,Ice,Ground\r\nPorygon-Z,264,150,198,474,Normal,None\r\nGallade,237,195,169,475,Psychic,Fighting\r\nProbopass,135,275,155,476,Rock,Steel\r\nDusknoir,180,254,128,477,Ghost,None\r\nFroslass,171,150,172,478,Ice,Ghost\r\nRotom,185,159,137,479,Electric,Ghost\r\nRotom-Heat,204,219,137,479_12,Electric,Fire\r\nRotom-Wash,204,219,137,479_13,Electric,Water\r\nRotom-Frost,204,219,137,479_14,Electric,Ice\r\nRotom-Fan,204,219,137,479_15,Electric,Flying\r\nRotom-Mow,204,219,137,479_16,Electric,Grass\r\nUxie,156,270,181,480,Psychic,None\r\nMesprit,212,212,190,481,Psychic,None\r\nAzelf,270,151,181,482,Psychic,None\r\nDialga,275,211,205,483,Steel,Dragon\r\nPalkia,280,215,189,484,Water,Dragon\r\nHeatran,251,213,209,485,Fire,Steel\r\nRegigigas,287,210,221,486,Normal,None\r\nGiratina-Altered,187,225,284,487,Ghost,Dragon\r\nGiratina-Origin,225,187,284,487_12,Ghost,Dragon\r\nCresselia,152,258,260,488,Psychic,None\r\nPhione,162,162,190,489,Water,None\r\nManaphy,210,210,225,490,Water,None\r\nDarkrai,285,198,172,491,Dark,None\r\nShaymin-Land,210,210,225,492_11,Grass,None\r\nShaymin-Sky,261,166,225,492_12,Grass,Flying\r\nArceus,238,238,237,493,Normal,None\r\nMeltan,118,99,130,808,Steel,None\r\nMelmetal,226,190,264,809,Steel,None`.split(\"\\n\");\r\n","export default `1,0.094\r\n1.5,0.135137432\r\n2,0.16639787\r\n2.5,0.192650919\r\n3,0.21573247\r\n3.5,0.236572661\r\n4,0.25572005\r\n4.5,0.273530381\r\n5,0.29024988\r\n5.5,0.306057378\r\n6,0.3210876\r\n6.5,0.335445036\r\n7,0.34921268\r\n7.5,0.362457751\r\n8,0.3752356\r\n8.5,0.387592416\r\n9,0.39956728\r\n9.5,0.411193551\r\n10,0.4225\r\n10.5,0.432926409\r\n11,0.44310755\r\n11.5,0.453059959\r\n12,0.4627984\r\n12.5,0.472336093\r\n13,0.48168495\r\n13.5,0.4908558\r\n14,0.49985844\r\n14.5,0.508701765\r\n15,0.51739395\r\n15.5,0.525942511\r\n16,0.5343543\r\n16.5,0.542635738\r\n17,0.5507927\r\n17.5,0.558830586\r\n18,0.5667545\r\n18.5,0.574569133\r\n19,0.5822789\r\n19.5,0.589887907\r\n20,0.5974\r\n20.5,0.604823665\r\n21,0.6121573\r\n21.5,0.619404122\r\n22,0.6265671\r\n22.5,0.633649143\r\n23,0.64065295\r\n23.5,0.647580967\r\n24,0.65443563\r\n24.5,0.661219252\r\n25,0.667934\r\n25.5,0.674581896\r\n26,0.6811649\r\n26.5,0.687684904\r\n27,0.69414365\r\n27.5,0.70054287\r\n28,0.7068842\r\n28.5,0.713169109\r\n29,0.7193991\r\n29.5,0.725575614\r\n30,0.7317\r\n30.5,0.734741009\r\n31,0.7377695\r\n31.5,0.740785594\r\n32,0.74378943\r\n32.5,0.746781211\r\n33,0.74976104\r\n33.5,0.752729087\r\n34,0.7556855\r\n34.5,0.758630368\r\n35,0.76156384\r\n35.5,0.764486065\r\n36,0.76739717\r\n36.5,0.770297266\r\n37,0.7731865\r\n37.5,0.776064962\r\n38,0.77893275\r\n38.5,0.781790055\r\n39,0.784637\r\n39.5,0.787473608\r\n40,0.7903`.split(\"\\n\");\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Options from \"./components/Options\";\nimport TableGenerator from \"./components/TableGenerator\";\nimport AutoCompleteSearch from \"./components/AutoCompleteSearch\";\nimport Instructions from \"./components/Instructions\";\nimport PageFooter from \"./components/PageFooter\";\nimport pokemondata from \"./data/pokemondata\";\nimport cpmultipliers from \"./data/cpmultipliers\";\nimport typeCounters from \"./data/typeCounters\";\nimport typeResistances from \"./data/typeResistances\";\nimport weatherBoosts from \"./data/weatherBoosts\";\n\nfunction getinitialState() {\n  return {\n    data: {\n      names: getNames(),\n      cpm: cpmultipliers,\n      stats: pokemondata\n    },\n    search: {\n      selected: \"\",\n      selected_number: \"\",\n      suggestions: [],\n      text: \"\",\n      selectedStats: [],\n      statsArray: [],\n      typing: [],\n      counters: [],\n      resistances: [],\n      weather: []\n    },\n    options: {\n      id: \"options\",\n      sort: \"cp\",\n      toggle: { nundo: true, lvl15: false, under90: false, color: true },\n      cpfilter: false,\n      filtervalue: \"\",\n      highestLevel: 40\n    },\n    version_number: \"1.5.1\"\n  };\n}\n\nfunction getNames() {\n  const names = pokemondata.map(\n    x => x.split(\",\")[0]\n  ); /*Get first column from the data.*/\n  const namesWithNumbers = pokemondata.map(\n    x => x.split(\",\")[4].slice(0, 3) + \" \" + x.split(\",\")[0]\n  );\n  const namesWithNumbersNoZero = pokemondata.map(\n    x => parseInt(x.split(\",\")[4].slice(0, 3)) + \" \" + x.split(\",\")[0]\n  );\n  const temp = namesWithNumbers.concat(namesWithNumbersNoZero.slice(0, 115));\n  return names.concat(temp);\n}\n\nclass App extends Component {\n  state = getinitialState();\n\n  onTextChanged = e => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, \"i\");\n      suggestions = this.state.data.names.sort().filter(v => regex.test(v));\n    }\n    const state = { ...this.state };\n    state.search.text = value;\n    state.search.suggestions = suggestions;\n    this.setState(() => ({ state }));\n  };\n\n  suggestionSelected = value => {\n    const state = { ...this.state };\n    state.search.text = value;\n    state.search.suggestions = [];\n    const test = value.split(\" \");\n    if (test.length > 1) {\n      if (isNaN(test[0])) {\n        state.search.selected = value;\n      } else state.search.selected = test.slice(1).join(\" \");\n    } else state.search.selected = value;\n    const data = this.state.data.stats;\n    for (var i = 0; i < data.length; i++) {\n      var split = data[i].split(\",\");\n      var x = String(state.search.selected);\n      if (split[0] === x) {\n        state.search.selectedStats = split.slice(1, 4);\n        state.search.selected_number = split[4];\n        var types = [];\n        types.push(split[5]);\n        if (split[6] !== \"None\") {\n          types.push(split[6]);\n        }\n        state.search.typing = types;\n      }\n    }\n    this.setState(() => ({ state }));\n    this.generateStatsArray();\n    this.getCounters();\n    this.getWeather();\n  };\n\n  renderSuggestions = () => {\n    let state = { ...this.state };\n    if (state.search.suggestions.length === 0) {\n      return null;\n    }\n    /*\n    if (state.search.suggestions.length > 5) {\n      state.search.suggestions = state.search.suggestions.slice(0, 5);\n    }*/\n    return (\n      <ul>\n        {state.search.suggestions.map(item => (\n          <li onClick={() => this.suggestionSelected(item)} key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  changeSort = value => {\n    const state = { ...this.state };\n    state.options.sort = value;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  changeHighestLevel = value => {\n    const state = { ...this.state };\n    state.options.highestLevel = value;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  toggleNundo = () => {\n    const state = { ...this.state };\n    state.options.toggle.nundo = !state.options.toggle.nundo;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  toggleLvl15 = () => {\n    const state = { ...this.state };\n    state.options.toggle.lvl15 = !state.options.toggle.lvl15;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  toggleUnder90 = () => {\n    const state = { ...this.state };\n    state.options.toggle.under90 = !state.options.toggle.under90;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  toggleColor = () => {\n    const state = { ...this.state };\n    state.options.toggle.color = !state.options.toggle.color;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  toggleCPFilter = () => {\n    const state = { ...this.state };\n    state.options.cpfilter = !state.options.cpfilter;\n    this.setState(() => ({ state }));\n    if (this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  getCPM = level => {\n    var cpm = 0;\n    const cpmArray = this.state.data.cpm;\n    cpm = parseFloat(cpmArray[level * 2 - 2].split(\",\")[1]);\n    return cpm;\n  };\n\n  calculateCP = (atk, def, sta, lvl) => {\n    return Math.floor(\n      (atk * Math.sqrt(def) * Math.sqrt(sta) * Math.pow(this.getCPM(lvl), 2)) /\n        10\n    );\n  };\n\n  generateStatsArray = () => {\n    var atk = parseInt(this.state.search.selectedStats[0]);\n    var def = parseInt(this.state.search.selectedStats[1]);\n    var sta = parseInt(this.state.search.selectedStats[2]);\n    var statsArray = [];\n    for (var at = 15; at > 9; at--) {\n      for (var de = 15; de > 9; de--) {\n        for (var st = 15; st > 9; st--) {\n          var iv = ((at + de + st) / 45.0) * 100;\n          var cp15 = this.calculateCP(atk + at, def + de, sta + st, 15.0);\n          var cp20 = this.calculateCP(atk + at, def + de, sta + st, 20.0);\n          var cp25 = this.calculateCP(atk + at, def + de, sta + st, 25.0);\n          var cpHigh = this.calculateCP(\n            atk + at,\n            def + de,\n            sta + st,\n            this.state.options.highestLevel\n          );\n          var hp15 = Math.floor((sta + st) * this.getCPM(15.0));\n          var hp20 = Math.floor((sta + st) * this.getCPM(20.0));\n          var hp25 = Math.floor((sta + st) * this.getCPM(25.0));\n          var hpHigh = Math.floor(\n            (sta + st) * this.getCPM(this.state.options.highestLevel)\n          );\n          var newArray = [\n            cp15,\n            hp15,\n            cp20,\n            hp20,\n            cp25,\n            hp25,\n            iv.toFixed(1),\n            at,\n            de,\n            st,\n            cpHigh,\n            hpHigh\n          ]; /*toFixed rounds to specified amount of decimal places.*/\n          statsArray.push(newArray);\n        }\n      }\n    }\n    statsArray.sort(this.sortFunction);\n    const state = { ...this.state };\n    state.search.statsArray = statsArray;\n    this.setState(() => ({ state }));\n    this.filterStats();\n  };\n\n  sortFunction = (a, b) => {\n    const sortDict = {\n      cp: 2,\n      iv: 6,\n      atk: 7\n    };\n    var index = sortDict[this.state.options.sort];\n    var index2 = 0; /*Secondary sort index.*/\n    var index3 = 0; /*Tertiary sort index.*/\n    if (this.state.options.sort === \"iv\") {\n      index2 = 2; /*If primary sort is by IV, secondary sort is by CP@20.*/\n      index3 = 10; /*If primary sort is by IV, tertiary sort is by CP@40.*/\n    } else if (this.state.options.sort === \"cp\") {\n      index2 = 10; /*If primary sort is by CP@20, secondary sort is by CP@40.*/\n      index3 = 6; /*If primary sort is by IV, teriary sort is by IV.*/\n    } else {\n      index2 = 6; /*If primary sort is by ATK, secondary sort is by IV.*/\n      index3 = 10; /*If primary sort is by IV, teriary sort is by IV.*/\n    }\n    if (parseFloat(a[index]) === parseFloat(b[index])) {\n      if (parseFloat(a[index2]) === parseFloat(b[index2])) {\n        if (parseFloat(a[index3]) === parseFloat(b[index3])) {\n          return 0;\n        } else {\n          return parseFloat(a[index3]) > parseFloat(b[index3]) ? -1 : 1;\n        }\n      } else {\n        return parseFloat(a[index2]) > parseFloat(b[index2]) ? -1 : 1;\n      }\n    } else {\n      return parseFloat(a[index]) > parseFloat(b[index]) ? -1 : 1;\n    }\n  };\n\n  filterStats = () => {\n    var stats_raw = [...this.state.search.statsArray];\n    var stats_temp = [];\n    var stats = [];\n\n    if (!this.state.options.toggle.under90) {\n      for (var i = 0; i < stats_raw.length; i++) {\n        if (stats_raw[i][6] > 90) {\n          stats_temp.push(stats_raw[i]);\n        }\n        if (i === stats_raw.length - 1) {\n          if (this.state.options.toggle.nundo) {\n            stats_temp.push(stats_raw[i]);\n          }\n        }\n      }\n    } else {\n      stats_temp = stats_raw;\n    }\n\n    if (this.state.options.cpfilter && this.state.options.filtervalue) {\n      var temp2 = [];\n      const filtervalue = parseInt(this.state.options.filtervalue);\n      for (i = 0; i < stats_temp.length; i++) {\n        if (\n          (stats_temp[i][0] === filtervalue &&\n            this.state.options.toggle.lvl15) ||\n          stats_temp[i][2] === filtervalue ||\n          stats_temp[i][4] === filtervalue ||\n          stats_temp[i][10] === filtervalue\n        ) {\n          temp2.push(stats_temp[i]);\n        }\n      }\n      stats_temp = temp2;\n    }\n\n    if (!this.state.options.toggle.lvl15) {\n      for (i = 0; i < stats_temp.length; i++) {\n        stats.push(stats_temp[i].slice(2, stats_temp[i].length));\n      }\n    } else {\n      stats = stats_temp;\n    }\n    const state = { ...this.state };\n    state.search.statsArray = stats;\n    this.setState(() => ({ state }));\n  };\n\n  onFilterChanged = e => {\n    const value = e.target.value;\n    const state = { ...this.state };\n    state.options.filtervalue = value;\n\n    this.setState(() => ({ state }));\n    if (this.state.options.cpfilter && this.state.search.selected) {\n      this.generateStatsArray();\n    }\n  };\n\n  reset = () => {\n    this.setState(getinitialState());\n  };\n\n  clearSearch = () => {\n    const state = { ...this.state };\n    state.search.text = \"\";\n    this.setState(() => ({ state }));\n  };\n\n  removeDuplicates = (item, index, inputArray) => {\n    return inputArray.indexOf(item) === index;\n  }; /*Remove duplicates*/\n\n  getCounters = () => {\n    const typings = this.state.search.typing;\n    let counters = [];\n    let resistances = [];\n\n    for (var i in typings) {\n      counters = counters.concat(typeCounters[typings[i]]);\n      counters = counters.filter(this.removeDuplicates);\n      resistances = resistances.concat(typeResistances[typings[i]]);\n      resistances = resistances.filter(this.removeDuplicates);\n    }\n    for (var j in resistances) {\n      for (var k = counters.length - 1; k >= 0; k--) {\n        if (counters[k] === resistances[j]) {\n          counters.splice(k, 1);\n        }\n      }\n    }\n    const state = { ...this.state };\n    state.search.counters = counters;\n    state.search.resistances = resistances;\n    this.setState(() => ({ state }));\n  };\n\n  getWeather = () => {\n    const types = this.state.search.typing;\n    var boosts = [];\n    for (var i in types) {\n      boosts.push(weatherBoosts[types[i]]);\n    }\n    boosts = boosts.filter(this.removeDuplicates);\n    const state = { ...this.state };\n    state.search.weather = boosts;\n    this.setState(() => ({ state }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          <Instructions version={this.state.version_number} />\n          <div className=\"AutoCompleteSearch\">\n            <AutoCompleteSearch\n              items={this.state.data.names}\n              search={this.state.search}\n              onTextChanged={this.onTextChanged}\n              renderSuggestions={this.renderSuggestions}\n              clearSearch={this.clearSearch}\n            />\n            {this.renderSuggestions()}\n          </div>\n          <br />\n          <Options\n            options={this.state.options}\n            changeSort={value => this.changeSort(value)}\n            toggleNundo={this.toggleNundo}\n            toggleLvl15={this.toggleLvl15}\n            toggleUnder90={this.toggleUnder90}\n            toggleColor={this.toggleColor}\n            toggleCPFilter={this.toggleCPFilter}\n            filterCP={this.state.options.filtervalue}\n            onFilterChanged={this.onFilterChanged}\n            changeHighestLevel={value => this.changeHighestLevel(value)}\n          />\n          <TableGenerator\n            options={this.state.options}\n            stats={this.state.search.statsArray}\n            selected={this.state.search.selected}\n            selected_number={this.state.search.selected_number}\n            selected_stats={this.state.search.selectedStats}\n            onClickReset={this.reset}\n            typing={this.state.search.typing}\n            counters={this.state.search.counters}\n            resistances={this.state.search.resistances}\n            weather={this.state.search.weather}\n          />\n          <PageFooter version={this.state.version_number} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}